class文件组成

类的生命周期：   https://blog.csdn.net/w372426096/article/details/81901482
    加载，连接[验证，准备，解析]，初始化



类的加载时机：
    遇到new、getstatic、putstatic或invokestatic这4条字节码指令时，如果类没有进行过初始化，则需要先触发初始化操作。
    用java.lang.reflect包的方法对类进行反射调用的时候，如果类没有进行过初始化，则需要触发初始化操作。
    初始化一个类的时候，发现其父类还有进行过初始化，则需要触发先其父类的初始化操作。


不被初始化的例子：
    通过子类引用父类的静态字段，子类不会被初始化
    通过数组定义来引用类
    调用类的常量

类加载机制：双亲委派


----------------------------------------------
局部变量表：
    最小单位：solt[局部变量槽]   solt大小：32java虚拟机 solt为32位  64-->64

    solt复用： 当一个变量的pc寄存器的值大于slot的作用域时，solt可以复用
    ...main(...){
        {byte[] b=new byte[20*1034];}
        int a=10;//此处对局部变量表进行读写【对solt进行读写】，下一步才会回收
        System.gc();
    }



