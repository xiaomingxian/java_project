面试题：https://blog.csdn.net/a745233700/article/details/80977133

京东面试题：获取mapping  的四种方式
    1 resource:mapper.xml文件的地址
    2 class
    3 url:文件的绝对路径
    4 package:

#{}和${}的区别是什么？
    #{}是预编译处理，${}是字符串替换。
    Mybatis在处理#{}时，会将sql中的#{}替换为?号，调用PreparedStatement的set方法来赋值；
    Mybatis在处理${}时，就是把${}替换成变量的值。
    使用#{}可以有效的防止SQL注入，提高系统安全性。

当实体类中的属性名和表中的字段名不一样 ，怎么办
    别名和实体类的属性名一致
    <resultMap>来映射字段名和实体类属性名的一一对应的关系。


Mapper 接口的工作原理是JDK动态代理，Mybatis运行时会使用JDK动态代理为Mapper接口生成代理对象proxy，
    代理对象会拦截接口方法，转而执行MapperStatement所代表的sql，然后将sql执行结果返回。


Mybatis是如何进行分页的？分页插件的原理是什么？
        Mybatis使用RowBounds对象进行分页，它是针对ResultSet结果集执行的内存分页，而非物理分页。
            可以在sql内直接书写带有物理分页的参数来完成物理分页功能，也可以使用分页插件来完成物理分页。
       分页插件的基本原理是使用Mybatis提供的插件接口，实现自定义插件，在插件的拦截方法内拦截待执行的sql，
            然后重写sql，根据dialect方言，添加对应的物理分页语句和物理分页参数。


Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？
    第一种是使用<resultMap>标签，逐一定义数据库列名和对象属性名之间的映射关系。
    第二种是使用sql列的别名功能，将列的别名书写为对象属性名。
    有了列名与属性名的映射关系后，Mybatis通过反射创建对象，同时使用反射给对象的属性逐一赋值并返回，那些找不到映射关系的属性，是无法完成赋值的。

  

Mybatis的一级、二级缓存:
     1）一级缓存: 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session，当 Session flush 或 close 之后，该 Session 中的所有 Cache 就将清空，默认打开一级缓存。
     2）二级缓存与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap 存储，不同在于其存储作用域为 Mapper(Namespace)，并且可自定义存储源，如 Ehcache。默认不打开二级缓存，要开启二级缓存，使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置<cache/> ；
     3）对于缓存数据更新机制，当某一个作用域(一级缓存 Session/二级缓存Namespaces)的进行了C/U/D 操作后，默认该作用域下所有 select 中的缓存将被 clear。