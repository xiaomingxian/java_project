定期删除[主动删除]、惰性删除[被动删除]，[超过maxmemory限定时，触发主动清理策略]


定期删除
    所谓定期删除，指的是 redis 默认是每隔 100ms 就随机抽取一些设置了过期时间的 key，检查其是否过期，如果过期就删除。


随机检查
    假如在redis 里插入10w个key，并且都设置了过期时间，如果每次都检查所有key，那cpu基本上都消耗在过期key的检查上了，redis对外的性能也会大大降低，简直就是一场灾难。
随机检查会存在什么问题？
    可能导致本已经过期的key没有被扫描到，而继续留在内存中，并占用空间，等待被删除。
这种情况怎么解决
    这时候就需要第二种过期策略了，惰性删除，就是在获取某个 key 的时候，redis 会检查一下 ，如果这个 key 设置了过期时间，并且已经过期了，那么就直接删除，返回空。
那再考虑一种情况，如果大量的key没有被扫描到，且已过期，也没有被再次访问，即没有走惰性删除，这些大量过期 key 堆积在内存里，导致 redis 内存块耗尽了，这种情况下，怎么办？
    redis内部提供了内存淘汰机制，应该有好几种策略，但我只知道LRU算法。

手写一个LRU算法？  https://blog.csdn.net/crazyhuntsman/article/details/81981014

    1. 新数据插入到链表头部；
    2. 每当缓存命中（即缓存数据被访问），则将数据移到链表头部；
    3. 当链表满的时候，将链表尾部的数据丢弃。