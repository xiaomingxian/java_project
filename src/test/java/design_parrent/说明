设计模式分为三大类：
    创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
    结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
    行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、
                备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。
    其实还有两类：并发型模式和线程池模式。

类加载是天然的线程安全？？？？为啥

单例：
    饿汉：线程安全，效率高[非同步]，不能做到延迟加载
    懒汉：效率低[为了线程安全，创建对象的地方加锁了]，可以延迟加载
    双重检测锁：* 由于编译器优化和JVM底层模型原因，可能导致锁顺序发生变化偶尔会失效
    静态内部类：具备了：延迟加载，线程安全[final修饰只能赋值一次]