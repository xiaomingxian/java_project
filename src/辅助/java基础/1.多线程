----------------------------------  sleep()与wait()  ----------------------------------
1.  对于sleep()方法，我们首先要知道该方法是属于Thread类中的。而wait()方法，则是属于Object类中的。

2.  sleep()方法导致了程序暂停执行指定的时间，让出cpu该其他线程，但是他的监控状态依然保持者，当指定的时间到了又会自动恢复运行状态。
    在调用sleep()方法的过程中，线程不会释放对象锁。

    而当调用wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用notify()方法后本线程才进入对象锁定池准备
    获取对象锁进入运行状态。

------------------------------------------- 单例模式：懒汉模式存在的线程安全问题 ----------------------------------
    public Single{
        private static Single s=null;
        //私有，不让外界创建对象
        private Single(){}
        public static Single getInstance(){
        //如果没有这个判断-只用锁效率相对较低「阻塞」
            if(s==null){
                synchronized(Single.class){
                    if(s==null){
                        s=new Single();
                    }
                }
            }
        }

    }
    1.解决了多线程安全的问题，

    2.用两个判断语句提高了效率。

    面试的时候偶面试官可能问你，懒汉式有问题吗？怎么解决？用的是什么锁？

    你的回答；有问题，在多线程的时候会出现安全问题，可以用同步代码块或者同步函数解决，但是效率低，用双重判断解决低效的问题。用的锁是本类所属的字节码文件对象

--------------------------------------------------- 锁 ---------------------------------------------------
        同步函数的锁是this
        静态同步函数的锁是class对象